# plot 2 for identity
plot2 <- VhgBoxplot(file, x_column = "best_query", y_column = "ViralRefSeq_ident")
plot2
check()
library(Virusparies)
?VhgBoxplot
document()
document()
document()
document()
document()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
"remove_identifiers = TRUE")
document()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
document()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
View(subject_df)
count(file_filtered$ViralRefSeq_taxonomy)
table(file_filtered$ViralRefSeq_taxonomy)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = FALSE)
print(subject_df)
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = FALSE)
print(subject_df)
View(file)
load_all()
?VhgGetSubject
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = FALSE)
print(subject_df)
library(tidyverse)
VhgGetSubject <- function(file, groupby = "best_query", remove_identifiers = TRUE) {
result <- file
if (remove_identifiers) {
result <- result %>%
mutate(Processed_ViralRefSeq_subject = str_extract(ViralRefSeq_subject, "(?<=\\|).*"))
} else {
result <- result %>%
mutate(Processed_ViralRefSeq_subject = ViralRefSeq_subject)
}
# Process and count matching subjects
result <- result %>%
group_by(.data[[groupby]], Processed_ViralRefSeq_subject) %>%
summarise(subject_count = n(), .groups = 'drop')
return(result)
}
# Test data
file <- tibble::tibble(
ViralRefSeq_taxonomy = c("Anelloviridae", "Anelloviridae", "Anelloviridae", "Anelloviridae", "Anelloviridae"),
ViralRefSeq_subject = c(
"gi:1035950754|Torque teno mini virus 18 isolate",
"gi:134133206|Torque teno midi virus 1, complete",
"gi:1464307108|Torque teno virus 5 isolate TCHN-",
"gi:1464307111|Torque teno virus 9 clone BM1C-18",
"gi:1464307113|Torque teno virus 11 isolate TCHN-"
)
)
# Test with remove_identifiers = TRUE
result_true <- VhgGetSubject(file, groupby = "ViralRefSeq_taxonomy", remove_identifiers = TRUE)
print(result_true)
# Test with remove_identifiers = FALSE
result_false <- VhgGetSubject(file, groupby = "ViralRefSeq_taxonomy", remove_identifiers = FALSE)
print(result_false)
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = FALSE)
print(subject_df)
document()
check()
check()
document()
check()
document()
check()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered
remove_identifiers = TRUE)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = FALSE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
document()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = FALSE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = FALSE)
print(subject_df)
load_all()
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = FALSE)
load_all()
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = FALSE)
rlang::last_trace()
check()
check()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = FALSE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = FALSE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,
remove_identifiers = TRUE)
print(subject_df)
document()
check()
document()
load_all()
?VhgGetSubject
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE)
print(subject_df)
# import data
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# process column and filter for significant groups
file <- VhgPreprocessTaxa(file,taxa_rank = "Family")
file_filtered <- VhgSubsetHittable(file,ViralRefSeq_E_criteria = 1e-5)
subject_df <- VhgGetSubject(file_filtered,groupby = "ViralRefSeq_taxonomy",
remove_identifiers = TRUE,include_run_ids = TRUE)
print(subject_df)
View(subject_df)
View(file)
check()
document()
check()
?VhgGetSubject
library(Virusparies)
?`Virusparies-package`
library(Virusparies)
?`Virusparies-package`
document()
load_all()
?VhgSubsetHittable
?read.table
?type.convert
# Define the file paths
input_file <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.xlsx"
output_file <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.tsv"
# Read the Excel file
data <- read_excel(input_file)
# Load the packages
library(readxl)
library(readr)
# Define the file paths
input_file <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.xlsx"
output_file <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.tsv"
# Read the Excel file
data <- read_excel(input_file)
# Write the data to a TSV file
write_tsv(data, output_file)
# Confirmation message
cat("Excel file has been successfully converted to TSV format and saved as:", output_file, "\n")
library(Virusparies)
ImportVirusTable("/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.tsv")
# Load the packages
library(readxl)
library(readr)
library(dplyr)
# Define the file paths
input_file <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.xlsx"
output_file <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Read the Excel file
data <- read_excel(input_file)
# Multiply the number of rows by 10
data_expanded <- bind_rows(replicate(10, data, simplify = FALSE))
# Write the expanded data to a TSV file
write_tsv(data_expanded, output_file)
# Confirmation message
cat("Excel file has been successfully expanded and converted to TSV format, saved as:", output_file, "\n")
ImportVirusTable("/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv")
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Initialize a vector to store the times
times <- numeric(10)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test <- ImportVirusTable(file_path)
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
}
# Calculate the average time
average_time <- mean(times)
# Print the average time
cat("Average time taken to run the command 10 times:", average_time, "seconds\n")
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Initialize a vector to store the times
times <- numeric(10)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test <- read_tsv(file_path)
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
}
# Calculate the average time
average_time <- mean(times)
# Print the average time
cat("Average time taken to run the command 10 times:", average_time, "seconds\n")
View(data_expanded)
test2 <- ImportVirusTable(file_path)
use_package("readr")
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Initialize a vector to store the times
times <- numeric(10)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test <- read_tsv(file_path,skip_empty_rows = FALSE)
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
}
# Calculate the average time
average_time <- mean(times)
# Print the average time
cat("Average time taken to run the command 10 times:", average_time, "seconds\n")
View(test)
test <- read_tsv(file_path,skip_empty_rows = TRUE)
test <- read_tsv(file_path,skip_empty_rows = TRUE,show_col_types = FALSE)
document()
check()
check()
document()
check()
load_all()
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1 for e-values
plot1 <- VhgBoxplot(file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Initialize a vector to store the times
times <- numeric(10)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test <- ImportVirusTable(file_path)
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
}
# Calculate the average time
average_time <- mean(times)
# Print the average time
cat("Average time taken to run the command 10 times:", average_time, "seconds\n")
View(test)
is.na(test$ViralRefSeq_taxonomy)
table(is.na(test$ViralRefSeq_taxonomy))
library(Virusparies)
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Initialize a vector to store the times
times <- numeric(10)
test <- ImportVirusTable(file_path)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test2 <- VhgPreprocessTaxa(test,"Family")
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
prin(i)
}
library(Virusparies)
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/test.tsv"
# Initialize a vector to store the times
times <- numeric(10)
test <- ImportVirusTable(file_path)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test2 <- VhgPreprocessTaxa(test,"Family")
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
print(i)
}
# Calculate the average time
average_time <- mean(times)
# Print the average time
cat("Average time taken to run the command 10 times:", average_time, "seconds\n")
library(Virusparies)
# Define the file path
file_path <- "/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.tsv"
# Initialize a vector to store the times
times <- numeric(10)
test <- ImportVirusTable(file_path)
# Run the import command 10 times and measure the time taken for each run
for (i in 1:10) {
start_time <- Sys.time()
test2 <- VhgPreprocessTaxa(test,"Family")
end_time <- Sys.time()
times[i] <- as.numeric(difftime(end_time, start_time, units = "secs"))
print(i)
}
# Calculate the average time
average_time <- mean(times)
# Print the average time
cat("Average time taken to run the command 10 times:", average_time, "seconds\n")
