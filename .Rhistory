library(gt)
gtsave(X)
gtsave(X,filename = "plot.png")
X <- vhgTabularRasa(as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE)),names_ = c("Virushunter Hittable Columns 1","Virushunter Hittable Columns 2"),title = "VirusHunter Columns")
gtsave(X,filename = "plot.png")
X <- vhgTabularRasa(as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE)),names_ = c("Virushunter Hittable Columns 1","Virushunter Hittable Columns 2"))
as.data.frame(matrix(names(vg_file), ncol=2, nrow=8, byrow=TRUE))
matrix(names(vg_file)
matrix(names(vg_file))
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("Virushunter Hittable Columns "))
X
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
ggsave(X,"file.png")
gtsave(X,"file.png")
X <- vhgTabularRasa(as.data.frame(names(vg_file)),names_ = c("VirusGatherer Hittable Columns "),title = "VirusGatherer columns")
gtsave(X,"file.png")
vh_file <- importVirusTable(path = "/home/sergej/Desktop/coding/masterarbeit/data/hittables_20055_taubert_smalldna/virushunter.tsv")
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
gtsave(X,"plot.png")
names(vh_file)
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
names(vh_file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
names(vh_file)
names_ <- names(vh_file)[-6]
names_
X <- vhgTabularRasa(as.data.frame( names_),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
gtsave(X)
gtsave(X,"plot.png")
vh_file <- importVirusTable(path = "/home/sergej/Desktop/coding/masterarbeit/data/hittables_20055_taubert_smalldna/virushunter.tsv")
names(vh_file)
library(devtools)
library(Virusparies)
library(devtools)
library(devtools)
library(Virusparies)
library(Virusparies)
library(devtools)
ls
library(devtools)
document()
check()
install()
library(Virusparies)
?VhgBoxplot
library(devtools)
libra
library(Virusparies)
?exportVirusGt
?vhgTabularRasa
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
identity <- VhgBoxplot(vh_file,y_column = "ViralRefSeq_ident")
# generate table
vhgTabularRasa(identity$summary_stats)
# example 2: plot part of Vh_file (could be any other table)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
vhgTabularRasa(vh_file_part,title = "first 10 rows of vh_file",subtit =
"example for any table",names_ = c("Runs","Number of Contigs","Best Query Result",
"Refrence E-Value","Refrence Identity"))
exportVirusGt(vhgTabularRasa(vh_file_part))
library(gt)
?gtsave
library(devtools)
document()
check()
install()
library(Virusparies)
?VhgBoxplot
exportVirusGt(vhgTabularRasa(vh_file_part))
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
?vhgTabularRasa
# example 2: plot part of Vh_file (could be any other table)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
exportVirusGt(vhgTabularRasa(vh_file_part))
library(devtools)
document()
check()
install()
install.packages("chromote")
install.packages("chromote")
chromote::find_chrome()
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
identity <- VhgBoxplot(vh_file,y_column = "ViralRefSeq_ident")
# generate table
vhgTabularRasa(identity$summary_stats)
# example 2: plot part of Vh_file (could be any other table)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
exportVirusGt(vhgTabularRasa(vh_file_part))
Sys.which("chrome")
library(gt)
?gtsave
filename="table.png"
grep(pattern="\.(.*)",filename)
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
library(tools, lib.loc = "/usr/lib/R/library")
file_ext(filename)
fileext <- file_ext(filename)
fileext <- file_ext(filename)
if(fileext=="png"|"pdf"){
print("test")
}
if(fileext=="png"|fileext=="pdf"){
print("test")
}
filename="table.pdf"
fileext <- file_ext(filename)
if(fileext=="png"|fileext=="pdf"){
print("test")
}
find_chrome()
library(chromote)
find_chrome()
library(gt)
?gtsave
?gtsave
library(devtools)
use_package("chromote",type = "Imports")
document()
check()
document()
check()
install()
library(Virusparies)
?exportVirusGt
?png
library(devtools)
document()
check()
document()
check()
document()
check()
document()
document()
check()
document()
check()
document()
check()
install()
library(Virusparies)
?exportVirusGt
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
table <- vhgTabularRasa(vh_file_part,title = "first 10 rows of vh_file",subtit =
"example for any table",names_ = c("Runs","Number of Contigs","Best Query Result",
"Refrence E-Value","Refrence Identity"))
## Not run:
exportVirusGt(gtable=table,filename="vh_parttable.docx")
## End(Not run)
?exportVirusPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,cutoff = 1e-5)
## Not run:
exportVirusPlot(plot_object=plot,file_name="testplot.png",width=1920,height=1080)
library(devtools)
document()
check()
install()
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,cutoff = 1e-5)
## Not run:
exportVirusPlot(plot_object=plot,file_name="testplot.png",width=8,height=6,units="in")
## End(Not run)
rm(list=ls())
exportVirusPlot(plot_object=plot,file_name="testplot",width=8,height=6,units="in",device = "png")
filename="test"
sub('.*\\.', '', tolower(file_name))
file_name="test"
sub('.*\\.', '', tolower(file_name))
library(devtools)
document()
check()
document()
check()
install()
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,cutoff = 1e-5)
## Not run:
exportVirusPlot(plot_object=plot,file_name="testplot.png",width=8,height=6,units="in")
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,cutoff = 1e-5)
## Not run:
exportVirusPlot(plot=plot,file_name="testplot.png",width=8,height=6,units="in")
## End(Not run)
exportVirusPlot(plot=plot,file_name="testplot",width=8,height=6,units="in",device = "png")
library(devtools)
document()
check()
document()
check()
install()
library(Virusparies)
?exportVirusPlot
library(devtools)
document()
check()
document()
document()
check()
install()
library(Virusparies)
?exportVirusPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,cutoff = 1e-5)
## Not run:
# first export
exportVirusPlot(plot=plot,file_name="testplot.png",width=8,height=6,units="in")
library(devtools)
document()
document()
document()
document()
check()
install()
library(Virusparies)
?`Virusparies-package`
library(devtools)
document()
check()
install()
library(devtools)
document()
check()
install()
library(Virusparies)
?exportVirusGt
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
table <- vhgTabularRasa(vh_file_part,title = "first 10 rows of vh_file",subtit =
"example for any table",names_ = c("Runs","Number of Contigs","Best Query Result",
"Refrence E-Value","Refrence Identity"))
## Not run:
exportVirusGt(gtable=table,filename="vh_parttable.png")
find_chrome_path <- function() {
os_type <- .Platform$OS.type
if (os_type == "windows") {
chrome_path <- system("where chrome", intern = TRUE)
if (length(chrome_path) == 0) {
chrome_path <- system("where chromium", intern = TRUE)
}
} else if (os_type == "unix") {
if (Sys.info()["sysname"] == "Darwin") {
chrome_path <- system("mdfind 'kMDItemKind == Application' | grep 'Google Chrome.app'", intern = TRUE)
if (length(chrome_path) == 0) {
chrome_path <- system("mdfind 'kMDItemKind == Application' | grep 'Chromium.app'", intern = TRUE)
}
} else {
chrome_path <- system("which google-chrome", intern = TRUE)
if (chrome_path == "") {
chrome_path <- system("which chromium-browser", intern = TRUE)
}
}
} else {
stop("Unsupported OS type")
}
return(chrome_path)
}
chrome_path <- find_chrome_path()
print(chrome_path)
library(devtools)
document()
check()
library(devtools)
document()
check()
document()
check()
check()
check()
check()
document()
check()
check()
document()
install()
library(Virusparies)
"ViralRefSeq_taxonomy"
?vhSumHitsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhSumHitsBarplot(vh_file,cut = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhSumHitsBarplot(vh_file,groupby = "ViralRefSeq_taxonomy" ,cut = 1e-5)
plot
library(devtools)
document()
check()
install()
library(Virusparies)
?vhRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,groupby = "ViralRefSeq_taxonomy",cut = 1e-5)
plot
library(devtools)
document()
check()
document()
check()
install()
library(Virusparies)
?vhRunsTable
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# example 1: generate table with defaul arguments
table <- vhRunsTable(vh_file,cut = 1e-5)
table
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# example 1: generate table with defaul arguments
table <- vhRunsTable(vh_file,groupby = "ViralRefSeq_taxonomy",cut = 1e-5)
table
library(devtools)
document()
check()
install()
library(Virusparies)
?vhRunsTable
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# example 1: generate table with defaul arguments
table <- vhRunsTable(vh_file,cut = 1e-5)
table
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# example 1: generate table with defaul arguments
table <- vhRunsTable(vh_file,groupby = "ViralRefSeq_taxonomy",cut = 1e-5)
table
library(Virusparies)
### Import VirusHunter Hittable.
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
print(head(vh_file))  # print head of hunter files
### Import VirusHunter Hittable.
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
print(head(as_tibble(vh_file)))  # print head of hunter files
library(dplyr)
### Import VirusHunter Hittable.
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
print(head(as_tibble(vh_file)))  # print head of hunter files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
print(head(vg_file))
### Import VirusHunter Hittable.
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
print(head(vh_file))  # print head of hunter files
#>      SRA_run SRA_sample SRA_study   host_taxon host_taxid num_queries num_hits  best_E
#> 1 SRR10822543 SRS5937532 SRP239389 Homo_sapiens       9606           8       12 4.5e-05
#> 2 SRR12567985 SRS7305728 SRP279687 Homo_sapiens       9606           6        9 9.7e-13
#> 3 SRR12567985 SRS7305728 SRP279687 Homo_sapiens       9606           6        5 1.4e-08
#> 4 SRR10822560 SRS5937549 SRP239389 Homo_sapiens       9606          11        3 1.1e-08
#> 5 SRR12567985 SRS7305728 SRP279687 Homo_sapiens       9606           6        8 3.2e-10
#> 6 SRR10822546 SRS5937535 SRP239389 Homo_sapiens       9606           7       20 1.0e-01
#>       best_query ViralRefSeq_E ViralRefSeq_ident ViralRefSeq_aLen.sLen ViralRefSeq_contigs
#> 1 Anello_ORF1core      2.59e-38              93.8             192 / 194                   1
#> 2 Anello_ORF1core      8.44e-36              77.3             225 / 227                   6
#> 3 Anello_ORF1core      3.95e-34              70.1             231 / 232                   1
#> 4 Anello_ORF1core      3.69e-31              68.6             210 / 216                   1
#> 5 Anello_ORF1core      5.85e-31              76.9             195 / 201                   3
#> 6 Anello_ORF1core      8.63e-31              79.4             189 / 237                   1
#>                                                                               ViralRefSeq_subject
#> 1 gi:1464307144|Torque teno mini virus 11 isolate LIL-y2 ORF2, ORF1, and ORF3 genes, complete cds
#> 2                   gi:1464307216|Torque teno midi virus 11 DNA, complete genome, isolate: MDJN47
#> 3 gi:1464307144|Torque teno mini virus 11 isolate LIL-y2 ORF2, ORF1, and ORF3 genes, complete cds
#> 4                                          gi:134133206|Torque teno midi virus 1, complete genome
#> 5                   gi:1464307186|Torque teno midi virus 5 DNA, complete genome, isolate: MDJHem2
#> 6                   gi:1464307221|Torque teno midi virus 12 DNA, complete genome, isolate: MDJN51
#>                           ViralRefSeq_taxonomy date_analyzed
#> 1  taxid:2065037|Betatorquevirus|Anelloviridae    2022-05-17
#> 2 taxid:2065052|Gammatorquevirus|Anelloviridae    2022-05-06
#> 3  taxid:2065037|Betatorquevirus|Anelloviridae    2022-05-06
#> 4  taxid:687379|Gammatorquevirus|Anelloviridae    2022-05-17
#> 5 taxid:2065046|Gammatorquevirus|Anelloviridae    2022-05-06
#> 6 taxid:2065053|Gammatorquevirus|Anelloviridae    2022-05-17
### Import VirusGatherer Hittable.
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
print(head(vg_file))  # print head of gatherer files
#>       SRA_run SRA_sample SRA_study   host_taxon host_taxid                 contig_id
#>  1   ERR206007  ERS074208 ERP000373 Homo sapiens       9606   ERR206007_cap3_Contig-1
#>  2   ERR206007  ERS074208 ERP000373 Homo sapiens       9606   ERR206007_cap3_Contig-2
#>  3   ERR206007  ERS074208 ERP000373 Homo sapiens       9606   ERR206007_cap3_Contig-3
#>  4   ERR206007  ERS074208 ERP000373 Homo sapiens       9606   ERR206007_cap3_Contig-4
#>  5   ERR206021  ERS074222 ERP000373 Homo sapiens       9606   ERR206021_cap3_Contig-1
#>  6 SRR10822543 SRS5937532 SRP239389 Homo sapiens       9606 SRR10822543_cap3_Contig-1
#>    contig_len ViralRefSeq_E ViralRefSeq_ident ViralRefSeq_aLen
#>  1        603      4.22e-65            92.453              106
#>  2        461      3.22e-65            85.612              139
#>  3        364      2.46e-53            76.531               98
#>  4        334      9.87e-67            93.636              110
#>  5        323      8.91e-45            65.421              107
#>  6       3321      0.00e+00            86.058              789
#>                                                       ViralRefSeq_subject
#>  1                            acc:YP_009505712|Orf1 [Torque teno virus 5]
#>  2 acc:YP_003587853|hypothetical protein TTV10_gp4 [Torque teno virus 10]
#>  3                            acc:YP_003587868|ORF1 [Torque teno virus 3]
#>  4                           acc:YP_009505715|Orf1 [Torque teno virus 11]
#>  5        acc:YP_009505729|unnamed protein product [Torque teno virus 24]
#>  6                        acc:YP_009173866|polymerase [Hepatitis B virus]
#>                                                                                                ViralRefSeq_taxonomy
#>  1                                              taxid:687344|Alphatorquevirus homin5|Alphatorquevirus|Anelloviridae
#>  2                                             taxid:687349|Alphatorquevirus homin10|Alphatorquevirus|Anelloviridae
#>  3                                              taxid:687342|Alphatorquevirus homin3|Alphatorquevirus|Anelloviridae
#>  4                                                                      taxid:687350|Alphatorquevirus|Anelloviridae
#>  5                                             taxid:687363|Alphatorquevirus homin24|Alphatorquevirus|Anelloviridae
#>  6 taxid:10407|Orthohepadnavirus|Hepadnaviridae|Blubervirales|Revtraviricetes|Artverviricota|Pararnavirae|Riboviria
#>    date_analyzed
#>  1    2024-05-18
#>  2    2024-05-18
#>  3    2024-05-18
#>  4    2024-05-18
#>  5    2024-05-17
#>  6    2024-05-18
library(Virusparies)
citation(Virusparies)
citation("Virusparies")
library(Virusparies)
library(devtools)
document()
check()
install()
library(Virusparies)
?vhRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5)
plot
View(vh_file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
?VhgBoxplot()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
rlang::last_trace()
taxonomy_group_preprocess <- function(vh_file){
# split vh_file.
my_list <- strsplit(vh_file$ViralRefSeq_taxonomy,split = "|",fixed = TRUE)
# Apply the function to each sublist
viridae_elements <- lapply(my_list, extract_viridae)
# Remove elements containing "unclassified" outside the function
viridae_elements <- lapply(viridae_elements, function(x) x[!grepl("unclassified", x)])
viridae_elements[is.na(viridae_elements)] <- "unclassified"
vh_file$ViralRefSeq_taxonomy <- viridae_elements
return(vh_file)
}
View(vh_file)
library(devtools)
document()
check()
install()
