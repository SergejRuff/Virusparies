use_package("stringr",type="Imports")
library(ggplot2)
library(dplyr)
devtools::document()
devtools::document()
library(roxygen2)
devtools::document()
library(devtools)
document()
document()
warnings()
document()
document()
devtools::test()
devtools::check()
document()
use_package("stats",type="Imports")
document()
devtools::check()
document()
devtools::check()
use_package("rlang",type="Imports")
document()
devtools::check()
document()
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
rm(list = ls())
## packages ##
library(dplyr)
library(ggplot2)
library(readxl)
library(stringr)
library(gt)
## import ##
plot_name <- "may7_tauberthittables_20055"
vhvg <- "Virushunter" # specify if you plot virushunter or virusgatherer results.
xlsx_file <- read_excel("data/test_for_plots/virushunter(1).xlsx")
library(devtools)
document()
devtools::check()
devtools::build()
devtools::install()
library(remotes)
remotes::install_github("SergejRuff/Virusparies")
library(Virusparies)
library(devtools)
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
devtools::build()
class(1e⁵)
class(1e5)
document()
use_package("utils",type="Imports")
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
devtools::build()
document()
devtools::build()
devtools::check()
document()
devtools::check()
devtools::build()
devtools::document()
devtools::install()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
check()
devtools::build()
check()
library(devtools)
check()
document()
check()
devtools::build()
document()
build()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(devtools)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(devtools)
document()
document()
check()
document()
document()
check()
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
library(devtools)
document()
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
library(devtools)
check()
document()
library(devtools)
document()
check()
library(devtools)
document()
check()
document()
check()
is.character("14may_anello_debug_virushunter.tsv")
is.character(14may_anello_debug_virushunter.tsv)
is.character(14may_anello_debug_virushunter.tsv)
is.character(test)
is.character(1)
is.class("14may_anello_debug_virushunter.tsv")
class("14may_anello_debug_virushunter.tsv")
class(5)
path = "14may_anello_debug_virushunter.tsv"
class(path)
path=2
class(path)
class("14may_anello_debug_virushunter.tsv")
path
if (!is.character(path)) {
stop("Error: 'path' argument must be a character string.")
}
path = "14may_anello_debug_virushunter.tsv"
if (!is.character(path)) {
stop("Error: 'path' argument must be a character string.")
}
path ="hello"
if (!is.character(path)) {
stop("Error: 'path' argument must be a character string.")
}
library(devtools)
document()
check()
use_package("utils",type = "Imports")
document()
check()
document()
library(devtools)
library(devtools)
document()
check()
library(devtools)
document()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
document()
library(devtools)
document()
check()
document()
check()
system.file("extdata", "virushunter.tsv", package = "Virusparies")
document()
check()
system.file("extdata", "virushunter.tsv", package = "Virusparies")
document()
check()
?head
document()
check()
library(devtools)
document()
check()
document()
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
document()
check()
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
check()
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
document()
check()
document()
check()
?column_labels.background.color
library(devtools)
document()
check()
document()
check()
?cell_text
document()
check()
document()
check()
?cell_text
library(devtools)
document()
check()
library(devtools)
document()
document()
check()
document()
check()
document()
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
document()
check()
document()
check()
document()
document()
check()
document()
check()
install()
?vhEvalBoxTable
document()
library(devtools)
document()
check()
install()
?vhEvalBoxTable
?vhEvalBoxTable
install()
?vhEvalBoxTable
library(devtools)
document()
check()
document()
check()
document()
check()
install()
?vhEvalBoxTable
?vhEvalBoxTable
?vhEvalBoxTable
library(devtools)
document()
check()
document()
check()
install()
?vhEvalBoxTable()
?vhEvalBoxTable()
library(devtools)
document()
check()
document()
document()
check()
document()
check()
library(devtools)
document()
check()
document()
check()
install()
?vhEvalBoxTable
document()
check()
document()
check()
install()
?vhEvalBoxTable
library(devtools)
document()
check()
document()
check()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "evalue"
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden = "evalue",cut = 1e-5)
# generate table
eval_table <- vhEvalBoxTable(eval$summary_stats)
eval_table
names_ <- c("Best Query", "Median", "Q1", "Q3", "Min", "Max",
"% of Hits Below Threshold", "Number of Hits Below Threshold")
eval_table%>%
cols_label(
!!!setNames(names_[1:8], paste0("col_", 1:8))
)
library(gt)
eval_table%>%
cols_label(
!!!setNames(names_[1:8], paste0("col_", 1:8))
)
library(devtools)
document()
check()
document()
check()
document()
check()
document()
check()
document()
document()
check()
document()
check()
document()
check()
install()
?vhEvalBoxTable
library(Virusparies)
?vhEvalBoxTable
library(devtools)
document()
check()
document()
check()
document()
check()
?theme
library(ggplot2)
?theme
library(devtools)
document()
document()
check()
document()
check()
install()
library(Virusparies)
?vhEvalIdenBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "evalue"
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5)
# plot 2: plot boxplot for "identity"
identity <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="identity",cut = 1e-5)
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "void")
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "classic")
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "light")
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "dark")
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "void")
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "minimal")
library(ggplot2)
document()
library(devtools)
document()
pkgload::dev_help('vhEvalIdenBoxplot')
document()
check()
install()
?vhEvalIdenBoxplot
library(Virusparies)
?vhEvalIdenBoxplot()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "evalue"
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5)
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "grey")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "grey")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "bw")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "test")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "grey")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "gray")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "light")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "dark")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "void")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "gray")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "grey")
vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,theme_choice = "linedraw")
document()
library(devtools)
document()
document()
document()
document()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
pkgload::dev_help('vhEvalIdenBoxplot')
check()
install()
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "evalue"
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="evalue",cut = 1e-5,x_label ="5")
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "evalue"
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="identity",cut = 1e-5,x_label ="6")
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "evalue"
eval <- vhEvalIdenBoxplot(vh_file,eval_vs_iden="identity",cut = 1e-5)
