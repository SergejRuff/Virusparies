vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ .data[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ .data[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ .data[[group_column]], data = vh_file, sum)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ .data[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)                                                                                   print(summary_stats)
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)                                                                                   print(summary_stats)
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ group_column, data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)                                                                                   print(summary_stats)
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ group_column, data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot(vh_file,best_query,cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ .data[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ .data[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ .data[[group_column]], data = vh_file, sum)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
rlang::last_trace()
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
print(group_column)                                                                                    # Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ .data[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ .data[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ .data[[group_column]], data = vh_file, sum)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ .data[["best_query"]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ "best_query", data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[["best_query"]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
View(summary_stats)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = .data[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ .data[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ .data[[group_column]], data = vh_file, sum)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = vh_file[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ .data[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ .data[[group_column]], data = vh_file, sum)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = vh_file[[group_column]],
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ vh_file[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ vh_file[[group_column]], data = vh_file, sum)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file,group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
summary_stats <- data.frame(
group_column  = unique(vh_file[[group_column]]),
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ vh_file[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each best_query group
total_hits <- aggregate(num_hits ~ vh_file[[group_column]], data = vh_file, sum)
# Rename columns in below_threshold and total_hits for consistency
colnames(below_threshold) <- c(group_column, "num_hits_belowThreshold")
colnames(total_hits) <- c(group_column, "total_hits")
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = group_column)
below_threshold$percentage_below_thr <- with(below_threshold, (num_hits.x / num_hits.y) * 100)
# Rename and keep only the relevant num_hits column
below_threshold$num_hits_belowThreshold <- below_threshold$num_hits.x  # Keeping num_hits.x and renaming it to num_hits
below_threshold$total_hits <- NULL
names(below_threshold)[names(below_threshold) == "percentage_below_thr"] <- "percentage_below_cutoff"
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
summary_stats <- summary_stats[,-c(7,8)]
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
vh_sum_stat_evavlue_boxplot <- function(vh_file, group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
# Extract the group column values for inclusion in summary_stats
summary_stats <- data.frame(
group_column = unique(vh_file[[group_column]]),
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ vh_file[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each group
total_hits <- aggregate(num_hits ~ vh_file[[group_column]], data = vh_file, sum)
# Rename columns in below_threshold and total_hits for consistency
colnames(below_threshold) <- c(group_column, "num_hits_belowThreshold")
colnames(total_hits) <- c(group_column, "total_hits")
# Merge below_threshold with total_hits
below_threshold <- merge(below_threshold, total_hits, by = group_column)
# Calculate the percentage of hits below the threshold
below_threshold$percentage_below_cutoff <- with(below_threshold, (num_hits_belowThreshold / total_hits) * 100)
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
# Return the summarized statistics as a tibble
return(as_tibble(summary_stats))
}
vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5)
View(vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5))
vh_sum_stat_evavlue_boxplot <- function(vh_file, group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
# Extract the group column values for inclusion in summary_stats
summary_stats <- data.frame(
group_column = unique(vh_file[[group_column]]),
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ vh_file[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
# Calculate the total hits for each group
total_hits <- aggregate(num_hits ~ vh_file[[group_column]], data = vh_file, sum)
# Rename columns in below_threshold and total_hits for consistency
colnames(below_threshold) <- c(group_column, "num_hits_belowThreshold")
colnames(total_hits) <- c(group_column, "total_hits")
# Merge below_threshold with total_hits
below_threshold <- merge(below_threshold, total_hits, by = group_column)
print(below_threshold )
# Calculate the percentage of hits below the threshold
below_threshold$percentage_below_cutoff <- with(below_threshold, (num_hits_belowThreshold / total_hits) * 100)
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
# Return the summarized statistics as a tibble
return(as_tibble(summary_stats))
}
View(vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5))
vh_sum_stat_evavlue_boxplot <- function(vh_file, group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
# Extract the group column values for inclusion in summary_stats
summary_stats <- data.frame(
group_column = unique(vh_file[[group_column]]),
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ vh_file[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
print(below_threshold )
# Calculate the total hits for each group
total_hits <- aggregate(num_hits ~ vh_file[[group_column]], data = vh_file, sum)
# Rename columns in below_threshold and total_hits for consistency
colnames(below_threshold) <- c(group_column, "num_hits_belowThreshold")
colnames(total_hits) <- c(group_column, "total_hits")
# Merge below_threshold with total_hits
below_threshold <- merge(below_threshold, total_hits, by = group_column)
print(below_threshold )
# Calculate the percentage of hits below the threshold
below_threshold$percentage_below_cutoff <- with(below_threshold, (num_hits_belowThreshold / total_hits) * 100)
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
# Return the summarized statistics as a tibble
return(as_tibble(summary_stats))
}
View(vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5))
vh_sum_stat_evavlue_boxplot <- function(vh_file, group_column, cutoff) {
# Calculate median, quartiles, and other summary statistics
summary_stats <- aggregate(-log10(vh_file$ViralRefSeq_E) ~ vh_file[[group_column]], data = vh_file, FUN = function(x) {
c(median = median(x), Q1 = quantile(x, 0.25), Q3 = quantile(x, 0.75), min = min(x), max = max(x))
})
# Extract the group column values for inclusion in summary_stats
summary_stats <- data.frame(
group_column = unique(vh_file[[group_column]]),
median = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 1],
Q1 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 2],
Q3 = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 3],
min = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 4],
max = summary_stats[, "-log10(vh_file$ViralRefSeq_E)"][, 5]
)
# Rename columns
colnames(summary_stats) <- c(group_column, "median", "Q1", "Q3", "min", "max")
# Identify hits below the cutoff threshold
below_threshold <- aggregate(num_hits ~ vh_file[[group_column]], data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
print(below_threshold )
# Calculate the total hits for each group
total_hits <- aggregate(num_hits ~ vh_file[[group_column]], data = vh_file, sum)
print(total_hits)
# Rename columns in below_threshold and total_hits for consistency
colnames(below_threshold) <- c(group_column, "num_hits_belowThreshold")
colnames(total_hits) <- c(group_column, "total_hits")
# Merge below_threshold with total_hits
below_threshold <- merge(below_threshold, total_hits, by = group_column)
print(below_threshold )
# Calculate the percentage of hits below the threshold
below_threshold$percentage_below_cutoff <- with(below_threshold, (num_hits_belowThreshold / total_hits) * 100)
# Join the summarized statistics with the below_threshold information
summary_stats <- merge(summary_stats, below_threshold, by = group_column, all.x = TRUE)
summary_stats[is.na(summary_stats)] <- 0  # Replace NA values with 0
# Sort by median
summary_stats <- summary_stats[order(summary_stats$median, decreasing = TRUE), ]
# Return the summarized statistics as a tibble
return(as_tibble(summary_stats))
}
View(vh_sum_stat_evavlue_boxplot(vh_file,"best_query",cutoff = 1e-5))
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
document()
check()
document()
document()
document()
check()
document()
check()
document()
check()
document()
document()
check()
document()
check()
install()
?VhgIdentityScatterPlot
custom_plot
document()
install()
?VhgIdentityScatterPlot
library(Virusparies)
?VhgIdentityScatterPlot
library(devtools)
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
document()
document()
check()
library(devtools)
