path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
library(devtools)
document()
check()
document()
document()
check()
install()
library(Virusparies)
library(Virusparies)
library(Virusparies)
?VhgIdenFacetedScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(vh_file,cutoff = 1e-5)
plot
class(plot$evalue_stats)
names(vh_file)
library(devtools)
document()
check()
load_all()
?VhgIdenFacetedScatterPlot
document()
load_all()
?VhgIdenFacetedScatterPlot
?VhgIdentityScatterPlot
document()
load_all()
?VhgIdentityScatterPlot
document()
document()
check()
?VgConLenViolin
document()
load_all()
?VgConLenViolin
document()
document()
load_all()
?VhgBoxplot
load_all()
document()
load_all()
?VhgBoxplot
document()
check()
document()
check()
document()
check()
document()
check()
document()
document()
document()
?VhgBoxplot
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
rm(list=ls())
check()
install()
library(devtools)
document()
check()
document()
check()
library(devtools)
document()
check()
install()
library(devtools)
document()
check()
library(devtools)
install()
library(devtools)
document()
check()
install()
library(devtools)
use_devtools()
usethis::use_devtools()
usethis::use_devtools()
document
library(devtools)
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
names(file)
file[1,"ViralRefSeq_taxonomy" ]
document()
check()
install()
library(Virusparies)
?ImportVirusTable
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
print(head(vh_file))
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- ImportVirusTable(path2)
print(head(vg_file))
?saveRDS
document()
check()
load_all()
?ExportVirusGt
install()
document()
install()
check()
?read.table
document()
check()
install()
document()
check()
document()
check()
load_all()
?VhgIdenFacetedScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 2)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 3)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
table(file$best_query)
length(table(file$best_query))
3 > length(table(file$best_query))
4 > length(table(file$best_query))
5 > length(table(file$best_query))
document()
load_all()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1)
check()
install()
library(Virusparies)
?VhgIdenFacetedScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 2)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = "Anello_ORF1core")
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = "Genomo_Rep")
plot
table(file$best_query)
filter_group_criteria=3
filter_group_criteria > length(taxonomy_table)
taxonomy_table <- table(file$best_query)
filter_group_criteria > length(taxonomy_table)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 2)
document()
check()
?VhgIdenFacetedScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1:2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1:4)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1:5)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 2:4)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 3:4)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = 1:2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = "Anello_ORF1core")
plot
rlang::last_trace()
file <- file[file$groupby %in% "Anello_ORF1core", ]
View(file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
file <- file[file$groupby %in% c("Anello_ORF1core"), ]
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
file <- file[file$best_query %in% c("Anello_ORF1core"), ]
View(file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
file <- file[file[["best_query"]] %in% c("Anello_ORF1core"), ]
document()
check()
load_all()
?VhgIdenFacetedScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = "Anello_ORF1core")
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = c("Anello_ORF1core","Gemini_Rep"))
plot
names(file)
unique(file[["best_query"]]
unique(file[["best_query"]])
VhgFilter <- function(file,
group_column="best_query",
virus_groups = NULL,
num_hits_min = NULL,
ViralRefSeq_E_criteria = NULL,
ViralRefSeq_ident_criteria = NULL) {
# Apply user-defined virus_groups criteria if provided
if (!is.null(virus_groups)) {
valid_columns <- c("ViralRefSeq_taxonomy", "best_query")
if (!(group_column %in% valid_columns)) {
stop("Error: 'group_column' must be either 'ViralRefSeq_taxonomy' or 'best_query'.")
}
unique_groups <- unique(file[[group_column]])
if (!all(virus_groups %in% unique_groups)) {
stop("Error: virus_groups contain entries that do not match unique values in group_column.")
}
if (!is.character(virus_groups)) {
stop("Error: 'virus_groups' must be a character vector.")
}
file <- file[file[[group_column]] %in% virus_groups, ]
}
# Apply user-defined filtering criteria if provided
if (!is.null(num_hits_min)) {
if (!"num_hits" %in% colnames(file)) {
stop("Error: 'num_hits' column does not exist in the dataframe.")
}
file <- file[file$num_hits >= num_hits_min, ]
}
if (!is.null(ViralRefSeq_E_criteria)) {
if (!"ViralRefSeq_E" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_E' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_E < ViralRefSeq_E_criteria, ]
}
if (!is.null(ViralRefSeq_ident_criteria)) {
if (!"ViralRefSeq_ident" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_ident' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_ident < ViralRefSeq_ident_criteria, ]
}
return(file)
}
dim(file)
cat("the dimensions of the VirusHunter Hittable before filtering are: \n")
cat("The dimensions of the VirusHunter Hittable before filtering are: \n");dim(file)
names(file$best_query)
table(file$best_query)
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core")
VhgFilter <- function(file,
group_column="best_query",
virus_groups = NULL,
num_hits_min = NULL,
ViralRefSeq_E_criteria = NULL,
ViralRefSeq_ident_criteria = NULL) {
# Apply user-defined virus_groups criteria if provided
if (!is.null(virus_groups)) {
valid_columns <- c("ViralRefSeq_taxonomy", "best_query")
if (!(group_column %in% valid_columns)) {
stop("Error: 'group_column' must be either 'ViralRefSeq_taxonomy' or 'best_query'.")
}
unique_groups <- unique(file[[group_column]])
if (!all(virus_groups %in% unique_groups)) {
stop("Error: virus_groups contain entries that do not match unique values in group_column.")
}
if (!is.character(virus_groups)) {
stop("Error: 'virus_groups' must be a character vector.")
}
file <- file[file[[group_column]] %in% virus_groups, ]
}
# Apply user-defined filtering criteria if provided
if (!is.null(num_hits_min)) {
if (!"num_hits" %in% colnames(file)) {
stop("Error: 'num_hits' column does not exist in the dataframe.")
}
file <- file[file$num_hits >= num_hits_min, ]
}
if (!is.null(ViralRefSeq_E_criteria)) {
if (!"ViralRefSeq_E" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_E' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_E <= ViralRefSeq_E_criteria, ]
}
if (!is.null(ViralRefSeq_ident_criteria)) {
if (!"ViralRefSeq_ident" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_ident' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_ident < ViralRefSeq_ident_criteria, ]
}
return(file)
}
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core",num_hits_min = 4,ViralRefSeq_ident_criteria = 90)
VhgFilter <- function(file,
group_column="best_query",
virus_groups = NULL,
num_hits_min = NULL,
ViralRefSeq_E_criteria = NULL,
ViralRefSeq_ident_criteria = NULL) {
# Apply user-defined virus_groups criteria if provided
if (!is.null(virus_groups)) {
valid_columns <- c("ViralRefSeq_taxonomy", "best_query")
if (!(group_column %in% valid_columns)) {
stop("Error: 'group_column' must be either 'ViralRefSeq_taxonomy' or 'best_query'.")
}
unique_groups <- unique(file[[group_column]])
if (!all(virus_groups %in% unique_groups)) {
stop("Error: virus_groups contain entries that do not match unique values in group_column.")
}
if (!is.character(virus_groups)) {
stop("Error: 'virus_groups' must be a character vector.")
}
file <- file[file[[group_column]] %in% virus_groups, ]
}
# Apply user-defined filtering criteria if provided
if (!is.null(num_hits_min)) {
if (!"num_hits" %in% colnames(file)) {
stop("Error: 'num_hits' column does not exist in the dataframe.")
}
file <- file[file$num_hits >= num_hits_min, ]
}
if (!is.null(ViralRefSeq_E_criteria)) {
if (!"ViralRefSeq_E" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_E' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_E <= ViralRefSeq_E_criteria, ]
}
if (!is.null(ViralRefSeq_ident_criteria)) {
if (!"ViralRefSeq_ident" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_ident' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_ident < ViralRefSeq_ident_criteria, ]
}
if (nrow(file) == 0) {
warning("Warning: After filtering, the dataframe is empty.")
}
return(file)
}
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core",num_hits_min = 4,ViralRefSeq_ident_criteria = 90)
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core",num_hits_min = 4,ViralRefSeq_ident_criteria = 90,ViralRefSeq_E_criteria = 0.00001)
document()
check()
document()
rm(list = ls())
document()
check()
abs(90)
abs(-90)
document()
check()
?VhgIdenFacetedScatterPlot
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- ImportVirusTable(path2)
names(vg_file)
document()
check()
load_all()
?`Virusparies-package`
document()
check()
document()
check()
document()
check()
load_all()
?`Virusparies-package`
# import file
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# check dimensions before filtering
cat("The dimensions of the VirusHunter Hittable before filtering are: \n");dim(file)
# we only want the Anello_ORF1core from "best_query" col in this example
table(file$best_query)
file_filtered <- VhgFilterHittable(file,group_column = "best_query",
virus_groups = "Anello_ORF1core",
num_hits_min = 4,ViralRefSeq_ident_criteria = -90,ViralRefSeq_E_criteria = 0.00001)
# check dimensions after filtering
cat("The dimensions of the VirusHunter Hittable after filtering are: \n");dim(file_filtered)
document()
check()
document()
load_all()
?`Virusparies-package`
# import file
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# check dimensions before filtering
cat("The dimensions of the VirusHunter Hittable before filtering are: \n");dim(file)
# we only want the Anello_ORF1core from "best_query" col in this example
table(file$best_query)
file_filtered <- VhgSubsetHittable(file,group_column = "best_query",
virus_groups = "Anello_ORF1core",
num_hits_min = 4,ViralRefSeq_ident_criteria = -90,ViralRefSeq_E_criteria = 0.00001)
# check dimensions after filtering
cat("The dimensions of the VirusHunter Hittable after filtering are: \n");dim(file_filtered)
?VhgSubsetHittable
install()
library(Virusparies)
?VhgSubsetHittable
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
summary(file$num_hits)
document()
check()
load_all()
?VhgSubsetHittable
install()
library(Virusparies)
?VhgSubsetHittable
document()
install()
library(Virusparies)
?VhgSubsetHittable
document()
check()
install()
library(Virusparies)
?VhgSubsetHittable
doc
document()
check()
document()
install()
library(Virusparies)
?VhgSubsetHittable
?`Virusparies-package`
