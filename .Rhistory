path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5)
plot
View(vh_file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
?VhgBoxplot()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
rlang::last_trace()
taxonomy_group_preprocess <- function(vh_file){
# split vh_file.
my_list <- strsplit(vh_file$ViralRefSeq_taxonomy,split = "|",fixed = TRUE)
# Apply the function to each sublist
viridae_elements <- lapply(my_list, extract_viridae)
# Remove elements containing "unclassified" outside the function
viridae_elements <- lapply(viridae_elements, function(x) x[!grepl("unclassified", x)])
viridae_elements[is.na(viridae_elements)] <- "unclassified"
vh_file$ViralRefSeq_taxonomy <- viridae_elements
return(vh_file)
}
View(vh_file)
library(devtools)
document()
check()
install()
library(Virusparies)
?vhRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- vhRunsBarplot(vh_file,cut = 1e-5,groupby = "ViralRefSeq_taxonomy")
plot
rm(list = ls())
library(devtools)
document()
check()
document()
check()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
vh_file$ViralRefSeq_taxonomy
tax_column <- vh_file$ViralRefSeq_taxonomy
library(devtools)
rm(list = ls())
check()
install()
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
View(vh_file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "ViralRefSeq_taxonomy", y_column = "ViralRefSeq_E")
plot1
library(devtools)
check()
install()
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
View(vh_file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "ViralRefSeq_taxonomy", y_column = "ViralRefSeq_E")
plot1
?VhgIdenFacetedScatterPlot
# plot 1
plot <- VhgIdenFacetedScatterPlot(vh_file,groupby = "ViralRefSeq_taxonomy",cutoff = 1e-5)
plot
# plot 1
plot <- VhgIdenFacetedScatterPlot(vh_file,groupby = "best_query",cutoff = 1e-5)
plot
?VhgIdentityScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,cutoff = 1e-5)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# Basic plot
plot <- VhgIdentityScatterPlot(vh_file,groupby = "ViralRefSeq_taxonomy",cutoff = 1e-5)
plot
library(devtools)
document()
check()
install()
vh_file <- importVirusTable("data/hittables_reproduce_anello_17may_testnodbref_1/virushunter.tsv")
vh_file <- importVirusTable("/media/sergej/My Book/Rskripte_f-r_masterarbeit-main/virushunter.tsv")
vh_file <- importVirusTable("/media/sergej/My Book/Rskripte_f-r_masterarbeit-main/data/hittables_reproduce_anello_17may_testnodbref_1/virushunter.tsv")
VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E" ,colorblind_support = TRUE,theme_choice = "linedraw",
title = "Taubert 200056 smallDNA Viruses: Boxplot viral Ref. E-Values for each best query",axis_title_size = 15,xtext_size = 12,ytext_size = 12,
legend_text_size = 12,legend_title_size = 14)
vh_file <- importVirusTable("/media/sergej/My Book/Rskripte_f-r_masterarbeit-main/data/hittables_reproduce_anello_17may_dbug_1//virushunter.tsv")
VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E" ,colorblind_support = TRUE,theme_choice = "linedraw",
title = "Taubert 200056 smallDNA Viruses: Boxplot viral Ref. E-Values for each best query",axis_title_size = 15,xtext_size = 12,ytext_size = 12,
legend_text_size = 12,legend_title_size = 14)
library(devtools)
document()
check()
library(Virusparies)
?VhgBoxplot
?system.file
virusfam <- readRDS(system.file("data/ICTV_file_2023_MSL39v2.rds", package = "Virusparies"))
readRDS(system.file("data","ICTV_file_2023_MSL39v2.rds", package = "Virusparies"))
readRDS(system.file("data","ICTV_file_2023_MSL39v2.rds", package = "Virusparies"))
library(devtools)
?use_data()
use_data()
document()
check()
library(Virusparies)
?VhgBoxplot
document()
check()
document()
check()
system.file("extdata", "ICTV_file_2023.rds", package = "Virusparies")
data_path <- system.file("extdata", "ICTV_file_2023.rds", package = "Virusparies")
virusfam <- readRDS(data_path)
data_path <- system.file("extdata", "inst/extdata/ICTV_2023_file.csv", package = "Virusparies")
virusfam <- read.csv(data_path)
virusfam
data_path <- system.file("extdata", "ICTV_2023_file.csv", package = "Virusparies")
virusfam <- read.csv(data_path)
ata_path
data_path
system.file("extdata", "ICTV_2023_file.csv", package = "Virusparies")
library(Virusparies)
system.file("extdata", "ICTV_2023_file.csv", package = "Virusparies")
system.file("extdata/inst/", "ICTV_2023_file.csv", package = "Virusparies")
data_path <- system.file("inst/extdata/", "ICTV_2023_file.csv", package = "Virusparies")
data_path
data_path <- system.file("inst/extdata/", "file.csv", package = "Virusparies")
virusfam <- read.csv(data_path)
data_path <- system.file("inst/extdata/", "file.csv", package = "Virusparies")
data_path
data_path <- system.file("extdata", "file.csv", package = "Virusparies")
data_path
data_path
system.file("extdata", "file.csv", package = "Virusparies")
system.file("extdata", "virushunter.tsv", package = "Virusparies")
system.file("extdata", "file.csv", package = "Virusparies")
system.file("extdata", "file.csv", package = "Virusparies")
system.file("extdata", "file.csv", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file("extdata", "file", package = "Virusparies")
system.file( "file.csv", package = "Virusparies")
system.file(package = "Virusparies")
package_dir <- system.file(package = "Virusparies")
file.path(package_dir, "extdata", "file.csv")
system.file("inst/extdata", "file.csv", package = "Virusparies")
package_dir <- system.file(package = "Virusparies")
file_path <- file.path(package_dir, "inst/extdata", "file.csv")
virusfam <- read.csv(data_path)
file_path
read.csv("/home/sergej/R/x86_64-pc-linux-gnu-library/4.3/Virusparies/inst/extdata/file.csv")
test <- read.csv("/home/sergej/R/x86_64-pc-linux-gnu-library/4.3/Virusparies/inst/extdata/file.csv")
test <- read.csv("/media/sergej/My Book/git_clone/Virusparies/inst/extdata/file.csv")
View(test)
ICTV_data <- read.csv("/media/sergej/My Book/git_clone/Virusparies/inst/extdata/file.csv")
library(devtools)
use_data(ICTV_data)
data("ICTV_data", package = "Virusparies")
data("ICTV_data.rda", package = "Virusparies")
data("ICTV_data")
test <- data("ICTV_data")
document()
check()
?data
check()
ICTV_data <- read.csv("/media/sergej/My Book/git_clone/Virusparies/inst/extdata/file.csv")
ICTV_data <- read.csv("/media/sergej/My Book/Rskripte_f-r_masterarbeit-main/file.csv")
ICTV_data
View(ICTV_data)
ICTV_data <- read.csv("/media/sergej/My Book/Rskripte_f-r_masterarbeit-main/ICTV_2023_file.csv")
use_data(ICTV_data,internal = TRUE)
data('ICTV_data')
data(sysdata, envir=environment())
sysdata
check()
document()
document()
load_all()
ICTV_data
ICTV_data <- ICTV_data
library(devtools)
document()
check()
document()
check()
document()
check()
install()
?VhgBoxplot
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vg_file,x_column = "ViralRefSeq_tyxonomy",y_column = "contig_len")
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_tyxonomy",y_column = "contig_len")
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len")
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E")
plot5
VhgBoxplot <- function(vh_file,
x_column ="best_query",
y_column = "ViralRefSeq_E",
cut = 1e-5,
cut_colour = "#990000",
theme_choice = "linedraw",
flip_coords = TRUE,
title = "default",
title_size = 16,
title_face = "bold",
title_colour = "#2a475e",
subtitle = "default",
subtitle_size = 12,
subtitle_face = "bold",
subtitle_colour = "#1b2838",
xlabel = NULL,
ylabel = NULL,
axis_title_size = 12,
xtext_size = 10,
ytext_size = 10,
legend_title = "virus family",
legend_position = "bottom",
legend_title_size = 12,
legend_title_face = "bold",
legend_text_size = 10,
colorblind_support = FALSE,
colormap = "viridis"
){
is_file_empty(vh_file)
check_columns(vh_file,x_column)
check_columns(vh_file,y_column)
check_input_type(vh_file,y_column,2)
check_input_type(vh_file,x_column,1)
# check arguments
arg_character(theme_choice)
arg_character(legend_position)
arg_character(colormap)
arg_logical(flip_coords)
arg_logical(colorblind_support)
if(x_column == "ViralRefSeq_taxonomy"){
tax_column <- vh_file$ViralRefSeq_taxonomy
vh_file <- taxonomy_group_preprocess(vh_file)
}
# Find the smallest value greater than 0 in ViralRefSeq_E
min_positive_value <- min(vh_file$ViralRefSeq_E[vh_file$ViralRefSeq_E > 0])
# Replace all 0 values with the smallest positive value
vh_file$ViralRefSeq_E[vh_file$ViralRefSeq_E == 0] <- min_positive_value
# Get the parameters based on y_column
params <- get_plot_parameters(y_column, cut)
# Access the cutoff and ylabel from the returned list
cutoff <- params$cutoff
default_ylabel <- params$ylabel
# Apply the selected theme
theme_selected <- select_theme(theme_choice)
# set cutoff for contig_len and identity
if(y_column=="contig_len" | y_column== "ViralRefSeq_ident"){
message(paste(y_column," column was selected."))
message(paste("Removing values with E-values higher than: ",cut,"."))
vh_file <- vh_file[vh_file$ViralRefSeq_E < cut,]
message(paste0("after removing rows based on evalue the hittable has ",nrow(vh_file)," rows left."))
is_file_empty(vh_file)
}
# change values of evalues to -log10
if(y_column == "ViralRefSeq_E"){
y_aes <- -log10(vh_file[[y_column]])
}else{
y_aes <- vh_file[[y_column]]
}
# add default subtitle for E-values
if(y_column=="ViralRefSeq_E"){
# define a cut off fot evalue significance
default_sub <- paste0("red line shows viral Refrence E-values under user-defined threshold: ",10^(-cutoff)," (-log10 scale: ",cutoff,")")
}else{
default_sub <- NULL
}
# set default titles
default_titl <- switch(
y_column,
"ViralRefSeq_E" = "Boxplot plotting viral Reference E-Values for each virus family",
"contig_len" = "Boxplot plotting contig length for each virus family",
"ViralRefSeq_ident" = "Boxplot plotting viral Reference Identity for each virus family"
)
# Set the title
title_text <- if (title == "default") default_titl else if (is.null(title) || title == "") NULL else title
# Set the subtitle
subtitle_text <- if (subtitle == "default") default_sub else if (is.null(subtitle) || subtitle == "") NULL else subtitle
# Update xlabel to use user-provided label if provided
xlabel <- ifelse(!is.null(xlabel), xlabel, "Group in query")
# Determine the y-axis label based on user-provided ylabel or default label
ylabel <- ifelse(!is.null(ylabel), ylabel, default_ylabel)
########################
### generate boxplot ###
########################
# print message to console.
plot_boxplot_message(y_column=y_column,x_column=x_column,cutoff)
boxp <- ggplot(vh_file,aes(x=reorder(.data[[x_column]],y_aes,FUN=median),
y=y_aes,fill=.data[[x_column]]))+
geom_boxplot(staplewidth = 0.4)+
labs(x=xlabel,
y=ylabel,
title=title_text,
subtitle = subtitle_text)+
theme_selected+
theme(legend.position = legend_position)+
guides(fill=guide_legend(title=legend_title))+
theme(
plot.title = element_text(
size = title_size,
face = title_face,
color = title_colour),
axis.text.y = element_text(size = ytext_size),
axis.text.x = element_text(size = xtext_size),
axis.title = element_text(size = axis_title_size),
legend.text = element_text(size = legend_text_size),
legend.key.size = unit(1.5, "lines"),
legend.title = element_text(size = legend_title_size, face = legend_title_face),
plot.subtitle = element_text(
size = subtitle_size,
face = subtitle_face,
color= subtitle_colour
)
)
if (flip_coords) {
boxp <- boxp + coord_flip()
}
if(y_column=="ViralRefSeq_E"){
boxp <- boxp+geom_hline(aes(yintercept=cutoff), colour=cut_colour)
}
# add colorblind support
if(colorblind_support){
boxp<- colorbildsupport(boxp,colormap)
}
matched_vector <- consistentColourPalette(vh_file = vh_file, groupby = x_column)
boxp + scale_fill_manual(values = matched_vector)
print(matched_vector)
summary_stats <- boxp_summary_stats(vh_file, group = x_column,ycol =y_column)
if(x_column == "ViralRefSeq_taxonomy"){
vh_file$ViralRefSeq_taxonomy <- tax_column
}
if (y_column == "ViralRefSeq_E") {
outlier <- find_outlier_eval_box(vh_file, group = x_column)
} else if (y_column == "contig_len") {
outlier <- find_outlier_eval_box(vh_file, group = x_column, y_column = y_column)
}
#plot(boxp)
# Prepare the results list
results <- list(boxp = boxp, summary_stats = summary_stats)
# Add outliers if applicable
if (y_column == "ViralRefSeq_E" || y_column == "contig_len") {
results$outlier <- outlier
}
# extract rows below threshold
if (y_column == "ViralRefSeq_E") {
belowthres_boxp <- vhg_filter_belowthresholdboxplot(vh_file,cut)
results$rows_belowthres <- belowthres_boxp
}
# Return the results list
message("Boxplot generation completed.")
return(results)
}
VhgBoxplot()
VhgBoxplot(vh_file)
library(devtools)
install()
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E")
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E")
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E")
plot5
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E")
library(devtools)
install()
# plot 5: Virusgatherer plot for SRA_runs agains contig length
plot5 <- VhgBoxplot(vh_file,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E")
View(plot5)
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
library(devtools)
document()
install()
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "ViralRefSeq_taxonomy", y_column = "ViralRefSeq_E")
plot1
library(devtools)
document()
check()
install()
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
plot1$boxp+ scale_fill_manual(values = plot1$matched_vector)
library(ggplot2)
plot1$boxp+ scale_fill_manual(values = plot1$matched_vector)
rlang::last_trace()
is.na(plot1$matched_vector)
plot1$matched_vector[""]
plot1$matched_vector[]==""
test <-plot1$matched_vector[]==""
plot1$matched_vector[test]
plot1$matched_vector[test] <- "#a9a9a9"
plot1$matched_vector
library(ggplot2)
plot1$boxp+ + scale_fill_manual(values = plot1$matched_vector)
plot1$boxp+ scale_fill_manual(values = plot1$matched_vector)
library(devtools)
document()
check()
install()
library(Virusparies)
?VhgBoxplot
library()
library(devtools)
document()
check()
check()
install()
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
names(vh_file)
library(devtools)
document()
check()
check()
install()
library(Virusparies)
?`Virusparies-package`
plot5 <- VhgBoxplot(vg_file,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len")
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
plot5 <- VhgBoxplot(vg_file,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len")
library(devtools)
document()
check()
install()
library(Virusparies)
?`Virusparies-package`
