library(devtools)
document()
check()
document()
check()
install()
names(vh_file)
document()
check()
install()
library(Virusparies)
?vhIdentityBoxTable
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
vhIdentityBoxTable(vh_file)
?vhSumHitsBarplot
# plot 1: plot boxplot for "identity"
plot <- vhSumHitsBarplot(vh_file,cut = 1e-5)
plot
vhEvalBoxTable(plot$vh_group)
lib+
library(devtools)
document()
check()
install()
library(Virusparies)
?vhgTabularRasa
library(devtools)
document()
check()
install()
library(Virusparies)
?vhgTabularRasa
library(devtools)
document()
check()
install()
library(Virusparies)
?vhgTabularRasa
library(devtools)
usethis::use_citation()
library(dplyr)
citation("dplyr")
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
names(vh_file)
identity <- VhgBoxplot(vh_file,y_column = "ViralRefSeq_ident")
identity$boxp
vhgTabularRasa(identity$summary_stats)
test <- vhgTabularRasa(identity$summary_stats)
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
vh_file_part
vhgTabularRasa(vh_file_part)
vhgTabularRasa(vh_file_part,title = "first 10 rows of vh_file",subtit = "example for any table",names_ = c("Runs","Number of Contigs","Best Query Result","Refrence E-Value","Refrence Identity"))
library(devtools)
document()
check()
document()
check()
install()
library(Virusparies)
citation("Virusparies")
library(devtools)
use_version()
document()
check()
document()
check()
document()
check()
install()
library(Virusparies)
citation("Virusparies")
print(<citation>, bibtex=TRUE)
toBibtex(.)
library(devtools)
document()
check()
install()
library(Virusparies)
citation("Virusparies")
library(dplyr)
citation("dplyr")
library(devtools)
document()
check()
install()
library(devtools)
library(Virusparies)
citation("Virusparies")
library(dplyr)
citation("dplyr")
?vhgTabularRasa
library(devtools)
document()
class("#990000")
# Create a small matrix with no column names
matrix_data <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3)
# Print the matrix
print(matrix_data)
vhgTabularRasa(matrix_data)
vhgTabularRasa(as.data.frame(matrix_data))
check_is_dataframe <- function(obj) {
if (!is.data.frame(obj)) {
stop("The provided object is not a data.frame.")
}
message("The provided object is a data.frame.")
}
check_is_dataframe(as.data.frame(matrix_data))
check_is_dataframe(matrix_data)
check_is_dataframe(list(matrix_data))
check_is_dataframe <- function(obj) {
if (!is.data.frame(obj)) {
stop("The provided object is not a data.frame.")
}
}
check_is_dataframe(as.data.frame(matrix_data))
as.data.frame(matrix_data)
# Create a data frame
df <- data.frame(matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3))
# Remove column names
colnames(df) <- NULL
# Print the data frame
print(df)
vhgTabularRasa(df)
View(df)
vhgTabularRasa(df,names_ = c("1","2","3"))
names(df)
document()
pkgload::dev_help('vhgTabularRasa')
colnames(df)
check_columns <- function(df) {
if (is.null(colnames(df))) {
stop("The data frame has no column names.")
}
if (any(colnames(df) == "")) {
stop("The data frame has empty column names.")
}
}
check_columns(df)
document()
check()
document()
check()
install()
library(Virusparies)
?vhgTabularRasa
library(devtools)
document()
install()
library(devtools)
install()
library(Virusparies)
?vhgTabularRasa
library(gt)
citation(gt)
citation("gt")
library(devtools)
document()
check()
install()
library(Virusparies)
?vhgTabularRasa
citation("Virusparies")
?VhgBoxplot
?`Virusparies-package`
library(devtools)
document()
check()
install()
document()
install()
library(Virusparies)
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
View(vh_file)
View(vh_file)
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
View(vg_file)
names(vh_file)
names(vg_file)
library(devtools)
document()
check()
below_threshold <- aggregate(SRA_run ~ best_query, data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
cutoff=0.00001
cutoff=0.00001
below_threshold <- aggregate(SRA_run ~ best_query, data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
View(as.numeric(vh_file$SRA_run))
head(as.numeric(vh_file$SRA_run))
head(vh_file$SRA_run)
below_threshold <- aggregate(SRA_run ~ best_query, data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), FUN = function(x) {
table(x)
})
View(below_threshold)
below_threshold <- aggregate(SRA_run ~ best_query, data = subset(vh_file, ViralRefSeq_E < 10^(-cutoff)), FUN = length)
below_threshold
?vhRunsBarplot
167+2+6+5
below_threshold <- aggregate(SRA_run ~ best_query, data = subset(vh_file, ViralRefSeq_E < 10^(-cutoff)), FUN = function(x) {
sum(ViralRefSeq_E < 10^(-cutoff))
})
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file[ViralRefSeq_E < 10^(-cutoff), ], FUN = function(x) {
sum(ViralRefSeq_E < 10^(-cutoff))
})
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file[ViralRefSeq_E < 10^(-cutoff), ], FUN = function(x) {
sum(vh_file$ViralRefSeq_E < 10^(-cutoff))
})
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file[vh_file$ViralRefSeq_E < 10^(-cutoff), ], FUN = function(x) {
sum(vh_file$ViralRefSeq_E < 10^(-cutoff))
})
below_threshold
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file[ViralRefSeq_E < 10^(-cutoff), ], FUN = length)
below_threshold
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file, FUN = function(x) {
sum(vh_file$ViralRefSeq_E[x < 10^(-cutoff)])
})
below_threshold
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file, FUN = function(x) {
sum(vh_file$ViralRefSeq_E < 10^(-cutoff))
})
below_threshold
below_threshold <- aggregate(SRA_run ~ best_query, data = vh_file, FUN = function(x) {
sum(vh_file$ViralRefSeq_E[x < 10^(-cutoff)] < 10^(-cutoff))
})
below_threshold
below_threshold <- vh_file %>%
group_by(best_query) %>%
summarize(SRA_run = sum(ViralRefSeq_E < 10^(-cutoff)))
below_threshold
vh_file[vh_file$ViralRefSeq_E<1e-5,]
length(vh_file[vh_file$ViralRefSeq_E<1e-5,])
nrow(vh_file[vh_file$ViralRefSeq_E<1e-5,])
10^(-5)
below_threshold <- vh_file %>%
group_by(best_query) %>%
summarize(SRA_run = sum(ViralRefSeq_E < 10^(-cutoff)))
below_threshold
# Find the smallest value greater than 0 in ViralRefSeq_E
min_positive_value <- min(vh_file$ViralRefSeq_E[vh_file$ViralRefSeq_E > 0])
# Replace all 0 values with the smallest positive value
vh_file$ViralRefSeq_E[vh_file$ViralRefSeq_E == 0] <- min_positive_value
below_threshold <- vh_file %>%
group_by(best_query) %>%
summarize(SRA_run = sum(ViralRefSeq_E < 10^(-cutoff)))
below_threshold
below_threshold <- vh_file %>%
filter(ViralRefSeq_E < 10^(-cutoff)) %>%
group_by(best_query) %>%
summarize(SRA_run = n())
below_threshold
below_threshold <- table(vh_file$best_query[vh_file$ViralRefSeq_E < 10^(-cutoff)])
below_threshold
below_threshold <- vh_file %>%
group_by(best_query) %>%
summarize(SRA_run = sum(ViralRefSeq_E < 10^(-5)))
below_threshold
154+1+6+5
aggregate(num_hits ~ best_query, data = subset(vh_file, vh_file$ViralRefSeq_E < 10^(-cutoff)), sum)
aggregate(SRA_run ~ best_query, data = vh_file, sum)
vh_file %>%
group_by(best_query) %>%
summarize(SRA_run = n())
library(devtools)
document()
check()
document()
check()
install()
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
plot1 <- VhgBoxplot(vh_file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1$summary_stats
vh_file %>%
group_by(.data$best_query) %>%
summarize(SRA_run = sum(.data$ViralRefSeq_E < 10^(-5)))
below_threshold <- vh_file %>%
group_by(.data$best_query) %>%
summarize(SRA_run = sum(.data$ViralRefSeq_E < 10^(-5)))
below_threshold
library(dplyr)
below_threshold <- vh_file %>%
group_by(.data$best_query) %>%
summarize(SRA_run = sum(.data$ViralRefSeq_E < 10^(-5)))
below_threshold
# Calculate the total hits for each best_query group
total_hits <- vh_file %>%
group_by(.data$best_query) %>%
summarize(SRA_run = n())
# Calculate the total hits for each best_query group
total_hits
below_threshold <- vh_file %>%
group_by(.data$best_query) %>%
summarize(SRA_run = sum(.data$ViralRefSeq_E < 10^(-5)))
below_threshold
median(1.28e-12,1.28e-04)
# Calculate the percentage of hits below the threshold
below_threshold <- merge(below_threshold, total_hits, by = "best_query")
below_threshold$percentage_below_thr <- with(below_threshold, (SRA_run.x / SRA_run.y) * 100)
# Rename and keep only the relevant SRA_run column
below_threshold$SRA_run_belowThreshold <- below_threshold$SRA_run.x  # Keeping SRA_run.x and renaming it to SRA_run
below_threshold
median(12,7)
median(12,4)
median(4,12)
library(devtools)
document()
document()
check()
document()
check()
document()
check()
install()
library(Virusparies)
?VhgBoxplot
library(devtools)
document()
check()
document()
check()
document()
document()
document()
check()
install()
library(devtools)
library(Virusparies)
?VhgBoxplot
document()
check()
install()
library(Virusparies)
?VhgBoxplot
library(devtools)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
belowthreshold <- vh_file[vh_file$ViralRefSeq_E<1e-5,]
library(devtools)
document()
check()
install()
library(Virusparies)
?VhgBoxplot
citation("Virusparies")
?`Virusparies-package`
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
setdiff(names(vh_file),names(vg_file))
as.data.frame(names(vh_file))
vhgTabularRasa(as.data.frame(names(vh_file)),names_ = "Virushunter Hittable Columns")
as.data.frame(names(vh_file)ncol=2)
as.data.frame(names(vh_file),ncol=2)
as.data.frame(names(vh_file),ncol=2,nrow=8)
as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE))
vhgTabularRasa(as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE)),names_ = c("Virushunter Hittable Columns 1","Virushunter Hittable Columns 2"))
X <- vhgTabularRasa(as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE)),names_ = c("Virushunter Hittable Columns 1","Virushunter Hittable Columns 2"))
exportVirusGt(X)
exportVirusGt(X)
exportVirusGt(X)
library(gt)
gtsave(X)
gtsave(X,filename = "plot.png")
X <- vhgTabularRasa(as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE)),names_ = c("Virushunter Hittable Columns 1","Virushunter Hittable Columns 2"),title = "VirusHunter Columns")
gtsave(X,filename = "plot.png")
X <- vhgTabularRasa(as.data.frame(matrix(names(vh_file), ncol=2, nrow=8, byrow=TRUE)),names_ = c("Virushunter Hittable Columns 1","Virushunter Hittable Columns 2"))
as.data.frame(matrix(names(vg_file), ncol=2, nrow=8, byrow=TRUE))
matrix(names(vg_file)
matrix(names(vg_file))
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("Virushunter Hittable Columns "))
X
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
ggsave(X,"file.png")
gtsave(X,"file.png")
X <- vhgTabularRasa(as.data.frame(names(vg_file)),names_ = c("VirusGatherer Hittable Columns "),title = "VirusGatherer columns")
gtsave(X,"file.png")
vh_file <- importVirusTable(path = "/home/sergej/Desktop/coding/masterarbeit/data/hittables_20055_taubert_smalldna/virushunter.tsv")
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
gtsave(X,"plot.png")
names(vh_file)
X <- vhgTabularRasa(as.data.frame(names(vh_file)),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- importVirusTable(path2)
names(vh_file)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
names(vh_file)
names_ <- names(vh_file)[-6]
names_
X <- vhgTabularRasa(as.data.frame( names_),names_ = c("VirusHunter Hittable Columns "),title = "VirusHunter columns")
gtsave(X)
gtsave(X,"plot.png")
vh_file <- importVirusTable(path = "/home/sergej/Desktop/coding/masterarbeit/data/hittables_20055_taubert_smalldna/virushunter.tsv")
names(vh_file)
library(devtools)
library(Virusparies)
library(devtools)
library(devtools)
library(Virusparies)
library(Virusparies)
library(devtools)
ls
library(devtools)
document()
check()
install()
library(Virusparies)
?VhgBoxplot
library(devtools)
libra
library(Virusparies)
?exportVirusGt
?vhgTabularRasa
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
identity <- VhgBoxplot(vh_file,y_column = "ViralRefSeq_ident")
# generate table
vhgTabularRasa(identity$summary_stats)
# example 2: plot part of Vh_file (could be any other table)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
vhgTabularRasa(vh_file_part,title = "first 10 rows of vh_file",subtit =
"example for any table",names_ = c("Runs","Number of Contigs","Best Query Result",
"Refrence E-Value","Refrence Identity"))
exportVirusGt(vhgTabularRasa(vh_file_part))
library(gt)
?gtsave
library(devtools)
document()
check()
install()
library(Virusparies)
?VhgBoxplot
exportVirusGt(vhgTabularRasa(vh_file_part))
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
?vhgTabularRasa
# example 2: plot part of Vh_file (could be any other table)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
exportVirusGt(vhgTabularRasa(vh_file_part))
library(devtools)
document()
check()
install()
install.packages("chromote")
install.packages("chromote")
chromote::find_chrome()
library(Virusparies)
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- importVirusTable(path)
# plot 1: plot boxplot for "identity"
identity <- VhgBoxplot(vh_file,y_column = "ViralRefSeq_ident")
# generate table
vhgTabularRasa(identity$summary_stats)
# example 2: plot part of Vh_file (could be any other table)
# using first 10 rows of SRA_run,num_hits,bestquery,ViralRefSeq_E and Identity col.
vh_file_part <- vh_file[c(1:10),c(1,7,9,10,11)]
exportVirusGt(vhgTabularRasa(vh_file_part))
Sys.which("chrome")
library(gt)
?gtsave
filename="table.png"
grep(pattern="\.(.*)",filename)
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
library(tools, lib.loc = "/usr/lib/R/library")
file_ext(filename)
fileext <- file_ext(filename)
fileext <- file_ext(filename)
if(fileext=="png"|"pdf"){
print("test")
}
if(fileext=="png"|fileext=="pdf"){
print("test")
}
filename="table.pdf"
fileext <- file_ext(filename)
if(fileext=="png"|fileext=="pdf"){
print("test")
}
find_chrome()
library(chromote)
find_chrome()
library(gt)
?gtsave
?gtsave
library(devtools)
use_package("chromote",type = "Imports")
document()
check()
document()
check()
install()
