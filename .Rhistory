document()
check()
load_all()
?VhgIdenFacetedScatterPlot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = "Anello_ORF1core")
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1
plot <- VhgIdenFacetedScatterPlot(file,cutoff = 1e-5,filter_group_criteria = c("Anello_ORF1core","Gemini_Rep"))
plot
names(file)
unique(file[["best_query"]]
unique(file[["best_query"]])
VhgFilter <- function(file,
group_column="best_query",
virus_groups = NULL,
num_hits_min = NULL,
ViralRefSeq_E_criteria = NULL,
ViralRefSeq_ident_criteria = NULL) {
# Apply user-defined virus_groups criteria if provided
if (!is.null(virus_groups)) {
valid_columns <- c("ViralRefSeq_taxonomy", "best_query")
if (!(group_column %in% valid_columns)) {
stop("Error: 'group_column' must be either 'ViralRefSeq_taxonomy' or 'best_query'.")
}
unique_groups <- unique(file[[group_column]])
if (!all(virus_groups %in% unique_groups)) {
stop("Error: virus_groups contain entries that do not match unique values in group_column.")
}
if (!is.character(virus_groups)) {
stop("Error: 'virus_groups' must be a character vector.")
}
file <- file[file[[group_column]] %in% virus_groups, ]
}
# Apply user-defined filtering criteria if provided
if (!is.null(num_hits_min)) {
if (!"num_hits" %in% colnames(file)) {
stop("Error: 'num_hits' column does not exist in the dataframe.")
}
file <- file[file$num_hits >= num_hits_min, ]
}
if (!is.null(ViralRefSeq_E_criteria)) {
if (!"ViralRefSeq_E" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_E' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_E < ViralRefSeq_E_criteria, ]
}
if (!is.null(ViralRefSeq_ident_criteria)) {
if (!"ViralRefSeq_ident" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_ident' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_ident < ViralRefSeq_ident_criteria, ]
}
return(file)
}
dim(file)
cat("the dimensions of the VirusHunter Hittable before filtering are: \n")
cat("The dimensions of the VirusHunter Hittable before filtering are: \n");dim(file)
names(file$best_query)
table(file$best_query)
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core")
VhgFilter <- function(file,
group_column="best_query",
virus_groups = NULL,
num_hits_min = NULL,
ViralRefSeq_E_criteria = NULL,
ViralRefSeq_ident_criteria = NULL) {
# Apply user-defined virus_groups criteria if provided
if (!is.null(virus_groups)) {
valid_columns <- c("ViralRefSeq_taxonomy", "best_query")
if (!(group_column %in% valid_columns)) {
stop("Error: 'group_column' must be either 'ViralRefSeq_taxonomy' or 'best_query'.")
}
unique_groups <- unique(file[[group_column]])
if (!all(virus_groups %in% unique_groups)) {
stop("Error: virus_groups contain entries that do not match unique values in group_column.")
}
if (!is.character(virus_groups)) {
stop("Error: 'virus_groups' must be a character vector.")
}
file <- file[file[[group_column]] %in% virus_groups, ]
}
# Apply user-defined filtering criteria if provided
if (!is.null(num_hits_min)) {
if (!"num_hits" %in% colnames(file)) {
stop("Error: 'num_hits' column does not exist in the dataframe.")
}
file <- file[file$num_hits >= num_hits_min, ]
}
if (!is.null(ViralRefSeq_E_criteria)) {
if (!"ViralRefSeq_E" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_E' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_E <= ViralRefSeq_E_criteria, ]
}
if (!is.null(ViralRefSeq_ident_criteria)) {
if (!"ViralRefSeq_ident" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_ident' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_ident < ViralRefSeq_ident_criteria, ]
}
return(file)
}
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core",num_hits_min = 4,ViralRefSeq_ident_criteria = 90)
VhgFilter <- function(file,
group_column="best_query",
virus_groups = NULL,
num_hits_min = NULL,
ViralRefSeq_E_criteria = NULL,
ViralRefSeq_ident_criteria = NULL) {
# Apply user-defined virus_groups criteria if provided
if (!is.null(virus_groups)) {
valid_columns <- c("ViralRefSeq_taxonomy", "best_query")
if (!(group_column %in% valid_columns)) {
stop("Error: 'group_column' must be either 'ViralRefSeq_taxonomy' or 'best_query'.")
}
unique_groups <- unique(file[[group_column]])
if (!all(virus_groups %in% unique_groups)) {
stop("Error: virus_groups contain entries that do not match unique values in group_column.")
}
if (!is.character(virus_groups)) {
stop("Error: 'virus_groups' must be a character vector.")
}
file <- file[file[[group_column]] %in% virus_groups, ]
}
# Apply user-defined filtering criteria if provided
if (!is.null(num_hits_min)) {
if (!"num_hits" %in% colnames(file)) {
stop("Error: 'num_hits' column does not exist in the dataframe.")
}
file <- file[file$num_hits >= num_hits_min, ]
}
if (!is.null(ViralRefSeq_E_criteria)) {
if (!"ViralRefSeq_E" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_E' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_E <= ViralRefSeq_E_criteria, ]
}
if (!is.null(ViralRefSeq_ident_criteria)) {
if (!"ViralRefSeq_ident" %in% colnames(file)) {
stop("Error: 'ViralRefSeq_ident' column does not exist in the dataframe.")
}
file <- file[file$ViralRefSeq_ident < ViralRefSeq_ident_criteria, ]
}
if (nrow(file) == 0) {
warning("Warning: After filtering, the dataframe is empty.")
}
return(file)
}
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core",num_hits_min = 4,ViralRefSeq_ident_criteria = 90)
file_filtered <- VhgFilter(file,group_column = "best_query",virus_groups = "Anello_ORF1core",num_hits_min = 4,ViralRefSeq_ident_criteria = 90,ViralRefSeq_E_criteria = 0.00001)
document()
check()
document()
rm(list = ls())
document()
check()
abs(90)
abs(-90)
document()
check()
?VhgIdenFacetedScatterPlot
# import gatherer files
path2 <- system.file("extdata", "virusgatherer.tsv", package = "Virusparies")
vg_file <- ImportVirusTable(path2)
names(vg_file)
document()
check()
load_all()
?`Virusparies-package`
document()
check()
document()
check()
document()
check()
load_all()
?`Virusparies-package`
# import file
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# check dimensions before filtering
cat("The dimensions of the VirusHunter Hittable before filtering are: \n");dim(file)
# we only want the Anello_ORF1core from "best_query" col in this example
table(file$best_query)
file_filtered <- VhgFilterHittable(file,group_column = "best_query",
virus_groups = "Anello_ORF1core",
num_hits_min = 4,ViralRefSeq_ident_criteria = -90,ViralRefSeq_E_criteria = 0.00001)
# check dimensions after filtering
cat("The dimensions of the VirusHunter Hittable after filtering are: \n");dim(file_filtered)
document()
check()
document()
load_all()
?`Virusparies-package`
# import file
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# check dimensions before filtering
cat("The dimensions of the VirusHunter Hittable before filtering are: \n");dim(file)
# we only want the Anello_ORF1core from "best_query" col in this example
table(file$best_query)
file_filtered <- VhgSubsetHittable(file,group_column = "best_query",
virus_groups = "Anello_ORF1core",
num_hits_min = 4,ViralRefSeq_ident_criteria = -90,ViralRefSeq_E_criteria = 0.00001)
# check dimensions after filtering
cat("The dimensions of the VirusHunter Hittable after filtering are: \n");dim(file_filtered)
?VhgSubsetHittable
install()
library(Virusparies)
?VhgSubsetHittable
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
summary(file$num_hits)
document()
check()
load_all()
?VhgSubsetHittable
install()
library(Virusparies)
?VhgSubsetHittable
document()
install()
library(Virusparies)
?VhgSubsetHittable
document()
check()
install()
library(Virusparies)
?VhgSubsetHittable
doc
document()
check()
document()
install()
library(Virusparies)
?VhgSubsetHittable
?`Virusparies-package`
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
unique(file$best_query)
document()
check()
load_all()
?VhgIdenFacetedScatterPlot
library(Virusparies)
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
preprocess_runs_bar <- function(vh_file,groupby="best_query"){
all_names <- names(vh_file)
# Check if either "SRA_run" or "run_id" exists in vh_file
if (!("SRA_run" %in% all_names) && !("run_id" %in% all_names)) {
stop("Neither 'SRA_run' nor 'run_id' found in vh_file. Available column names: ", paste(all_names, collapse = ", "))
}
check_columns(vh_file,groupby)
total_unique_SRA_run <- n_distinct(coalesce(vh_file$SRA_run, vh_file$run_id))
sample_run <- vh_file %>%
group_by(.data[[groupby]]) %>%
summarise(unique_SRA_run = n_distinct(across(any_of(c("SRA_run", "run_id"))))) %>%
mutate(
perc = round(.data$unique_SRA_run / total_unique_SRA_run * 100, 2),
res = paste(.data$unique_SRA_run, " (", .data$perc, "%)"),
cyl = as.factor(.data[[groupby]])
)
return(sample_run)
}
preprocess_runs_bar(file)
check_columns <- function(file,columns){
# Get all column names from file
all_names <- names(file)
# Define the required columns
required_columns <- columns
# Check if each required column exists in file
for (col in required_columns) {
if (!(col %in% all_names)) {
stop("Column '", col, "' not found in file. Available column names: ", paste(all_names, collapse = ", "))
}
}
}
preprocess_runs_bar(file)
library(dplyr)
preprocess_runs_bar(file)
test <- preprocess_runs_bar(file)
test[0+1]
document()
check()
document()
load_all()
?VhgRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5)
document()
check()
load_all()
?VhgRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 0)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 3)
plot
test
test <- test %>% mutate(perc=paste(perc,"%"))
test
document()
load_all()
?VhgRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 0)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 3)
plot
check()
document()
check()
document()
check()
load_all()
?VhgRunsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red")
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust =1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_vjust = 1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_vjust = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = 0.1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = 0.0001)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = -0.0001)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = 0.000000000000001)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = -0.000000000000001)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhgRunsBarplot(file,cut = 1e-5,plot_text = 1,plot_text_colour = "red",plot_text_hjust = -2)
plot
rm(list = ls())
vh_sumhitbar_preprocessing <- function(vh_file,groupby="best_query"){
vh_group <- vh_file %>%
group_by(.data[[groupby]]) %>%
summarize(sum=sum(.data$num_hits))%>%
mutate(
perc = round(proportions(.data$sum) * 100, 2),
res = str_c(.data$sum, " (", .data$perc, "%)"),
cyl = as.factor(.data[[groupby]])
)
return(vh_group)
}
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
test <- vh_sumhitbar_preprocessing(file)
test
document()
pkgload::dev_help('VhSumHitsBarplot')
check()
pkgload::dev_help('VhSumHitsBarplot')
document()
check()
document()
check()
load_all()
?VhSumHitsBarplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhSumHitsBarplot(vh_file,cut = 1e-5)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhSumHitsBarplot(vh_file,cut = 1e-5,plot_text = 0)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhSumHitsBarplot(vh_file,cut = 1e-5,plot_text = 1)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhSumHitsBarplot(vh_file,cut = 1e-5,plot_text = 2)
plot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
vh_file <- ImportVirusTable(path)
# plot 1: plot boxplot for "identity"
plot <- VhSumHitsBarplot(vh_file,cut = 1e-5,plot_text = 3)
plot
?write.csv
library(Virusparies)
?VhgBoxplot
?VhgBoxplot
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1
path <- system.file("extdata", "virushunter.tsv", package = "Virusparies")
file <- ImportVirusTable(path)
# plot 1 for evalues
plot1 <- VhgBoxplot(file, x_column = "best_query", y_column = "ViralRefSeq_E")
plot1$outlier
plot1$summary_stats
document()
document()
check()
document()
check()
install()
document()
install()
